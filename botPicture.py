import os
import requests
import io
import discord
from discord.ext import commands
from discord import app_commands
from dotenv import load_dotenv
import threading
from flask import Flask 
import time 

# ‡πÇ‡∏´‡∏•‡∏î‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏™‡∏†‡∏≤‡∏û‡πÅ‡∏ß‡∏î‡∏•‡πâ‡∏≠‡∏°
load_dotenv()

DISCORD_TOKEN = os.getenv("DISCORD_TOKEN")
FREEPIK_API_KEY = os.getenv("FREEPIK_API_KEY")
RENDER_PORT = int(os.getenv("PORT", 8080)) 
ALLOWED_CHANNEL_ID = 1424193369646825482 

intents = discord.Intents.default()
intents.message_content = True 
bot = commands.Bot(command_prefix=commands.when_mentioned_or(""), intents=intents) 


# --- Flask Health Check (‡∏Ñ‡∏á‡πÑ‡∏ß‡πâ) ---
app = Flask(__name__)
@app.route('/')
def home():
    return "Discord Bot is running!", 200
def run_web_server():
    app.run(host='0.0.0.0', port=RENDER_PORT, debug=False, use_reloader=False)
# -----------------------------------


# *********** ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö Freepik API (‡πÑ‡∏°‡πà‡∏°‡∏µ Polling) ***********

def test_freepik_submission(prompt: str):
    url = "https://api.freepik.com/v1/ai/mystic"
    headers = {
        "content-type": "application/json",
        "x-freepik-api-key": FREEPIK_API_KEY 
    }
    payload = {
        "prompt": prompt,
        "resolution": "1k",
        "aspect_ratio": "square_1_1", 
        "model": "realism" 
    }
    
    try:
        response = requests.post(url, headers=headers, json=payload)
        
        # üö® ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î Debug ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î: ‡∏û‡∏¥‡∏°‡∏û‡πå Status ‡πÅ‡∏•‡∏∞ Response Content ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        print(f"DEBUG-TEST: Initial Freepik Status: {response.status_code}")
        print("DEBUG-TEST: Full Freepik Response Content:", response.text)
        
        # ‡∏™‡πà‡∏á Status ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ
        return response.status_code
            
    except Exception as e:
        print(f"An error occurred during Freepik API call: {e}")
        return 500 # ‡∏£‡∏´‡∏±‡∏™‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Internal Server Error

# *********** Slash Command ***********
@bot.tree.command(name="testsubmit", description="‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏†‡∏≤‡∏û‡πÑ‡∏õ Freepik ‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á Log ‡∏Å‡∏≤‡∏£‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô")
@app_commands.describe(
    prompt="‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á (‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©)"
)
async def test_submit_slash(interaction: discord.Interaction, prompt: str):
    
    if interaction.channel_id != ALLOWED_CHANNEL_ID:
        await interaction.response.send_message(
            f"‚ùå ‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á **/testsubmit** ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô!",
            ephemeral=True
        )
        return
    
    await interaction.response.defer() 

    # ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÉ‡∏ô Thread ‡πÅ‡∏¢‡∏Å
    status_code = await bot.loop.run_in_executor(
        None, test_freepik_submission, prompt
    )
    
    # ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö‡∏î‡πâ‡∏ß‡∏¢‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö
    if status_code in [200, 202]:
        await interaction.followup.send(
            f"‚úÖ Submission Successful! Freepik responded with status **{status_code}**. ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö **Render Log** ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π Task ID ‡πÅ‡∏•‡∏∞ JSON Response ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î!",
        )
    else:
        await interaction.followup.send(
            f"‚ùå Submission Failed! Freepik responded with status **{status_code}**. ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö **Render Log** ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î.",
        )

# *********** ‡∏£‡∏±‡∏ô‡∏ö‡∏≠‡∏ó ***********
if __name__ == "__main__":
    if not DISCORD_TOKEN or not FREEPIK_API_KEY:
        print("üö® ERROR: ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ DISCORD_TOKEN ‡πÅ‡∏•‡∏∞ FREEPIK_API_KEY ‡πÉ‡∏ô Environment Variables")
    else:
        server_thread = threading.Thread(target=run_web_server)
        server_thread.start()
        bot.run(DISCORD_TOKEN)
